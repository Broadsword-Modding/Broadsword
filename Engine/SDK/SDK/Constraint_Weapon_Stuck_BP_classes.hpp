#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Constraint_Weapon_Stuck_BP

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Enum_DismembermentPart_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Constraint_Weapon_Stuck_BP.Constraint_Weapon_Stuck_BP_C
// 0x0698 (0x0928 - 0x0290)
class AConstraint_Weapon_Stuck_BP_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBPC_RuntimeVertexPaintAndDetectionComponent_C* BPC_RuntimeVertexPaintAndDetectionComponent; // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   MarkerSphere;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPhysicsConstraintComponent*            PhysicsConstraint;                                 // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component_1__Weapon_;                              // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   Bone_Name_1;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Component_2__Body_;                                // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   Bone_Name_2;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Constraint_Strength;                               // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Tip;                                               // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Activate_Constraint;                               // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Thrust_;                                           // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AModularWeaponBP_C*                     My_Weapon;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Hitting_Body;                                      // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Hit_Actor;                                         // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FHitResult                             Hit_Result_Pos;                                    // 0x0310(0x00F8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                Start_Weapon_Impact;                               // 0x0408(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0420(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_424[0x4];                                      // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impulse;                                           // 0x0428(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Through;                                           // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit_Result_Neg;                                    // 0x0448(0x00F8)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Depth;                                             // 0x0540(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        base;                                              // 0x0548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          First_Frame_Hit;                                   // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Initial_Impact_Point;                              // 0x0558(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class USceneComponent*                        Position_Tracker;                                  // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Edge_Alignment;                                    // 0x0578(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Edge_Direction;                                    // 0x0580(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Out_Point_Found;                                   // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Out_Scene;                                         // 0x05A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        In_Scene;                                          // 0x05A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                In_Location;                                       // 0x05B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out_Location;                                      // 0x05C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MidPoint;                                          // 0x05E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Out_Norm;                                          // 0x05F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                In_Norm;                                           // 0x0610(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Initiail_Norm;                                     // 0x0628(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Weapon_Mid_Point;                                  // 0x0640(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dismember_Stage_1;                                 // 0x0658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dismember_Stage_2;                                 // 0x0659(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A[0x6];                                      // 0x065A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Dismember_Location;                                // 0x0660(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AConstraint_Zero_C*>             Constraint_Actors_To_Destroy;                      // 0x0678(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UPhysicsConstraintComponent*            NewVar;                                            // 0x0688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Ignore_Bone_Array;                                 // 0x0690(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                Bone_Impact_Point;                                 // 0x06A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stuck_In_Bone;                                     // 0x06B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Out_Sound;                                         // 0x06B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BA[0x2];                                      // 0x06BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Radius;                                            // 0x06BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Dismember_Cut_Level;                               // 0x06C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_6C4[0x4];                                      // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicsConstraintComponent*            Constraint;                                        // 0x06C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Edge_Sharpness;                                    // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Tip_Sharpness;                                     // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Bone_Health;                                       // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Bone_Mass;                                         // 0x06E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6EC[0x4];                                      // 0x06EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_Settings_C*                         GI_Settings;                                       // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Material_Density;                                  // 0x06F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   Hit_Bone_Name;                                     // 0x0700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Hit_Box_Collision;                                 // 0x0708(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          BoxCollision;                                      // 0x0710(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Weapon_Hit_Module;                                 // 0x0718(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        NewVar_0;                                          // 0x0720(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Disable_Nearest_Collisions;                        // 0x0728(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Out_Linear_Force;                                  // 0x0730(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          False_Egde;                                        // 0x0748(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_749[0x7];                                      // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Box_Extent;                                        // 0x0750(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            Overlapped_Markers;                                // 0x0768(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          Snapped;                                           // 0x0778(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_779[0x7];                                      // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                SubLocation;                                       // 0x0780(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Sub_Norm;                                          // 0x0798(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Sub_Bone;                                          // 0x07B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class AConstraint_Weapon_Stuck_BP_C*> NewVar_1;                                // 0x07B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   Parent_Bone;                                       // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Overlapping_Bones;                                 // 0x0810(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          NewVar_2;                                          // 0x0820(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_821[0x7];                                      // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            Overlapped_Markers_Current;                        // 0x0828(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          NewVar_3;                                          // 0x0838(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_839[0x3];                                      // 0x0839(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewVar_4;                                          // 0x083C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewVar_5;                                          // 0x0840(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_841[0x7];                                      // 0x0841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UPrimitiveComponent*, int32>       NewVar_6;                                          // 0x0848(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         NewVar_7;                                          // 0x0898(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_DismembermentPart                        Enum_DismembermentPart;                            // 0x089C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89D[0x3];                                      // 0x089D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Neck_Bones;                                        // 0x08A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           Torso_Bones;                                       // 0x08B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        NewVar_8;                                          // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Farthest_Overlap_Marker;                           // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar_9;                                          // 0x08D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        NewVar_10;                                         // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USphereComponent*>               As_Sphere_Collision;                               // 0x08F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          NewVar_11;                                         // 0x0900(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dismemberment_In_Progress;                         // 0x0901(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_902[0x6];                                      // 0x0902(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            Component_2__Body__0;                              // 0x0908(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	double                                        Gore_Rate;                                         // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Meat_Sound_0;                                      // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Add_Out_Point_Scene(const struct FVector& Location);
	void BndEvt__Constraint_Weapon_Stuck_BP_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Constraint_Weapon_Stuck_BP_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Call_Dismember();
	void Check_Dismember_2();
	void ExecuteUbergraph_Constraint_Weapon_Stuck_BP(int32 EntryPoint);
	void NewFunction(double Damage);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Release_Constraint();
	void Renew_Costrained_Bone();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Constraint_Weapon_Stuck_BP_C">();
	}
	static class AConstraint_Weapon_Stuck_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AConstraint_Weapon_Stuck_BP_C>();
	}
};
static_assert(alignof(AConstraint_Weapon_Stuck_BP_C) == 0x000008, "Wrong alignment on AConstraint_Weapon_Stuck_BP_C");
static_assert(sizeof(AConstraint_Weapon_Stuck_BP_C) == 0x000928, "Wrong size on AConstraint_Weapon_Stuck_BP_C");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, UberGraphFrame) == 0x000290, "Member 'AConstraint_Weapon_Stuck_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, BPC_RuntimeVertexPaintAndDetectionComponent) == 0x000298, "Member 'AConstraint_Weapon_Stuck_BP_C::BPC_RuntimeVertexPaintAndDetectionComponent' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Box) == 0x0002A0, "Member 'AConstraint_Weapon_Stuck_BP_C::Box' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, MarkerSphere) == 0x0002A8, "Member 'AConstraint_Weapon_Stuck_BP_C::MarkerSphere' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, PhysicsConstraint) == 0x0002B0, "Member 'AConstraint_Weapon_Stuck_BP_C::PhysicsConstraint' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Arrow) == 0x0002B8, "Member 'AConstraint_Weapon_Stuck_BP_C::Arrow' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Component_1__Weapon_) == 0x0002C0, "Member 'AConstraint_Weapon_Stuck_BP_C::Component_1__Weapon_' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Bone_Name_1) == 0x0002C8, "Member 'AConstraint_Weapon_Stuck_BP_C::Bone_Name_1' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Component_2__Body_) == 0x0002D0, "Member 'AConstraint_Weapon_Stuck_BP_C::Component_2__Body_' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Bone_Name_2) == 0x0002D8, "Member 'AConstraint_Weapon_Stuck_BP_C::Bone_Name_2' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Constraint_Strength) == 0x0002E0, "Member 'AConstraint_Weapon_Stuck_BP_C::Constraint_Strength' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Tip) == 0x0002E8, "Member 'AConstraint_Weapon_Stuck_BP_C::Tip' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Activate_Constraint) == 0x0002F0, "Member 'AConstraint_Weapon_Stuck_BP_C::Activate_Constraint' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Thrust_) == 0x0002F1, "Member 'AConstraint_Weapon_Stuck_BP_C::Thrust_' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, My_Weapon) == 0x0002F8, "Member 'AConstraint_Weapon_Stuck_BP_C::My_Weapon' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Hitting_Body) == 0x000300, "Member 'AConstraint_Weapon_Stuck_BP_C::Hitting_Body' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Hit_Actor) == 0x000308, "Member 'AConstraint_Weapon_Stuck_BP_C::Hit_Actor' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Hit_Result_Pos) == 0x000310, "Member 'AConstraint_Weapon_Stuck_BP_C::Hit_Result_Pos' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Start_Weapon_Impact) == 0x000408, "Member 'AConstraint_Weapon_Stuck_BP_C::Start_Weapon_Impact' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Distance) == 0x000420, "Member 'AConstraint_Weapon_Stuck_BP_C::Distance' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Impulse) == 0x000428, "Member 'AConstraint_Weapon_Stuck_BP_C::Impulse' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Through) == 0x000440, "Member 'AConstraint_Weapon_Stuck_BP_C::Through' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Hit_Result_Neg) == 0x000448, "Member 'AConstraint_Weapon_Stuck_BP_C::Hit_Result_Neg' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Depth) == 0x000540, "Member 'AConstraint_Weapon_Stuck_BP_C::Depth' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, base) == 0x000548, "Member 'AConstraint_Weapon_Stuck_BP_C::base' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, First_Frame_Hit) == 0x000550, "Member 'AConstraint_Weapon_Stuck_BP_C::First_Frame_Hit' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Initial_Impact_Point) == 0x000558, "Member 'AConstraint_Weapon_Stuck_BP_C::Initial_Impact_Point' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Position_Tracker) == 0x000570, "Member 'AConstraint_Weapon_Stuck_BP_C::Position_Tracker' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Edge_Alignment) == 0x000578, "Member 'AConstraint_Weapon_Stuck_BP_C::Edge_Alignment' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Edge_Direction) == 0x000580, "Member 'AConstraint_Weapon_Stuck_BP_C::Edge_Direction' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Out_Point_Found) == 0x000598, "Member 'AConstraint_Weapon_Stuck_BP_C::Out_Point_Found' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Out_Scene) == 0x0005A0, "Member 'AConstraint_Weapon_Stuck_BP_C::Out_Scene' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, In_Scene) == 0x0005A8, "Member 'AConstraint_Weapon_Stuck_BP_C::In_Scene' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, In_Location) == 0x0005B0, "Member 'AConstraint_Weapon_Stuck_BP_C::In_Location' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Out_Location) == 0x0005C8, "Member 'AConstraint_Weapon_Stuck_BP_C::Out_Location' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, MidPoint) == 0x0005E0, "Member 'AConstraint_Weapon_Stuck_BP_C::MidPoint' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Out_Norm) == 0x0005F8, "Member 'AConstraint_Weapon_Stuck_BP_C::Out_Norm' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, In_Norm) == 0x000610, "Member 'AConstraint_Weapon_Stuck_BP_C::In_Norm' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Initiail_Norm) == 0x000628, "Member 'AConstraint_Weapon_Stuck_BP_C::Initiail_Norm' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Weapon_Mid_Point) == 0x000640, "Member 'AConstraint_Weapon_Stuck_BP_C::Weapon_Mid_Point' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Dismember_Stage_1) == 0x000658, "Member 'AConstraint_Weapon_Stuck_BP_C::Dismember_Stage_1' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Dismember_Stage_2) == 0x000659, "Member 'AConstraint_Weapon_Stuck_BP_C::Dismember_Stage_2' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Dismember_Location) == 0x000660, "Member 'AConstraint_Weapon_Stuck_BP_C::Dismember_Location' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Constraint_Actors_To_Destroy) == 0x000678, "Member 'AConstraint_Weapon_Stuck_BP_C::Constraint_Actors_To_Destroy' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar) == 0x000688, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Ignore_Bone_Array) == 0x000690, "Member 'AConstraint_Weapon_Stuck_BP_C::Ignore_Bone_Array' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Bone_Impact_Point) == 0x0006A0, "Member 'AConstraint_Weapon_Stuck_BP_C::Bone_Impact_Point' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Stuck_In_Bone) == 0x0006B8, "Member 'AConstraint_Weapon_Stuck_BP_C::Stuck_In_Bone' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Out_Sound) == 0x0006B9, "Member 'AConstraint_Weapon_Stuck_BP_C::Out_Sound' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Radius) == 0x0006BC, "Member 'AConstraint_Weapon_Stuck_BP_C::Radius' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Dismember_Cut_Level) == 0x0006C0, "Member 'AConstraint_Weapon_Stuck_BP_C::Dismember_Cut_Level' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Constraint) == 0x0006C8, "Member 'AConstraint_Weapon_Stuck_BP_C::Constraint' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Edge_Sharpness) == 0x0006D0, "Member 'AConstraint_Weapon_Stuck_BP_C::Edge_Sharpness' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Tip_Sharpness) == 0x0006D8, "Member 'AConstraint_Weapon_Stuck_BP_C::Tip_Sharpness' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Bone_Health) == 0x0006E0, "Member 'AConstraint_Weapon_Stuck_BP_C::Bone_Health' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Bone_Mass) == 0x0006E8, "Member 'AConstraint_Weapon_Stuck_BP_C::Bone_Mass' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, GI_Settings) == 0x0006F0, "Member 'AConstraint_Weapon_Stuck_BP_C::GI_Settings' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Material_Density) == 0x0006F8, "Member 'AConstraint_Weapon_Stuck_BP_C::Material_Density' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Hit_Bone_Name) == 0x000700, "Member 'AConstraint_Weapon_Stuck_BP_C::Hit_Bone_Name' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Hit_Box_Collision) == 0x000708, "Member 'AConstraint_Weapon_Stuck_BP_C::Hit_Box_Collision' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, BoxCollision) == 0x000710, "Member 'AConstraint_Weapon_Stuck_BP_C::BoxCollision' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Weapon_Hit_Module) == 0x000718, "Member 'AConstraint_Weapon_Stuck_BP_C::Weapon_Hit_Module' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_0) == 0x000720, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Disable_Nearest_Collisions) == 0x000728, "Member 'AConstraint_Weapon_Stuck_BP_C::Disable_Nearest_Collisions' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Out_Linear_Force) == 0x000730, "Member 'AConstraint_Weapon_Stuck_BP_C::Out_Linear_Force' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, False_Egde) == 0x000748, "Member 'AConstraint_Weapon_Stuck_BP_C::False_Egde' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Box_Extent) == 0x000750, "Member 'AConstraint_Weapon_Stuck_BP_C::Box_Extent' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Overlapped_Markers) == 0x000768, "Member 'AConstraint_Weapon_Stuck_BP_C::Overlapped_Markers' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Snapped) == 0x000778, "Member 'AConstraint_Weapon_Stuck_BP_C::Snapped' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, SubLocation) == 0x000780, "Member 'AConstraint_Weapon_Stuck_BP_C::SubLocation' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Sub_Norm) == 0x000798, "Member 'AConstraint_Weapon_Stuck_BP_C::Sub_Norm' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Sub_Bone) == 0x0007B0, "Member 'AConstraint_Weapon_Stuck_BP_C::Sub_Bone' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_1) == 0x0007B8, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_1' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Parent_Bone) == 0x000808, "Member 'AConstraint_Weapon_Stuck_BP_C::Parent_Bone' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Overlapping_Bones) == 0x000810, "Member 'AConstraint_Weapon_Stuck_BP_C::Overlapping_Bones' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_2) == 0x000820, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_2' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Overlapped_Markers_Current) == 0x000828, "Member 'AConstraint_Weapon_Stuck_BP_C::Overlapped_Markers_Current' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_3) == 0x000838, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_3' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_4) == 0x00083C, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_4' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_5) == 0x000840, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_5' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_6) == 0x000848, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_6' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_7) == 0x000898, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_7' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Enum_DismembermentPart) == 0x00089C, "Member 'AConstraint_Weapon_Stuck_BP_C::Enum_DismembermentPart' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Neck_Bones) == 0x0008A0, "Member 'AConstraint_Weapon_Stuck_BP_C::Neck_Bones' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Torso_Bones) == 0x0008B0, "Member 'AConstraint_Weapon_Stuck_BP_C::Torso_Bones' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_8) == 0x0008C0, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_8' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Farthest_Overlap_Marker) == 0x0008C8, "Member 'AConstraint_Weapon_Stuck_BP_C::Farthest_Overlap_Marker' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_9) == 0x0008D0, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_9' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_10) == 0x0008E8, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_10' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, As_Sphere_Collision) == 0x0008F0, "Member 'AConstraint_Weapon_Stuck_BP_C::As_Sphere_Collision' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, NewVar_11) == 0x000900, "Member 'AConstraint_Weapon_Stuck_BP_C::NewVar_11' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Dismemberment_In_Progress) == 0x000901, "Member 'AConstraint_Weapon_Stuck_BP_C::Dismemberment_In_Progress' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Component_2__Body__0) == 0x000908, "Member 'AConstraint_Weapon_Stuck_BP_C::Component_2__Body__0' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Gore_Rate) == 0x000918, "Member 'AConstraint_Weapon_Stuck_BP_C::Gore_Rate' has a wrong offset!");
static_assert(offsetof(AConstraint_Weapon_Stuck_BP_C, Meat_Sound_0) == 0x000920, "Member 'AConstraint_Weapon_Stuck_BP_C::Meat_Sound_0' has a wrong offset!");

}

