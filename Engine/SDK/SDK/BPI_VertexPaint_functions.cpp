#include "SDKPch.h"
#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_VertexPaint

#include "Basic.hpp"

#include "BPI_VertexPaint_classes.hpp"
#include "BPI_VertexPaint_parameters.hpp"


namespace SDK
{

// Function BPI_VertexPaint.BPI_VertexPaint_C.Box Vertex Paint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBoxComponent*                    Box                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             Hit_Bone                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Hit_Primitive_Component                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool*                                   Nul                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_VertexPaint_C::Box_Vertex_Paint(class UBoxComponent* Box, class FName Hit_Bone, class UPrimitiveComponent* Hit_Primitive_Component, bool* Nul)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = AsUObject()->Class->GetFunction("BPI_VertexPaint_C", "Box Vertex Paint");

	Params::BPI_VertexPaint_C_Box_Vertex_Paint Parms{};

	Parms.Box = Box;
	Parms.Hit_Bone = Hit_Bone;
	Parms.Hit_Primitive_Component = Hit_Primitive_Component;

	AsUObject()->ProcessEvent(Func, &Parms);

	if (Nul != nullptr)
		*Nul = Parms.Nul;
}

}

